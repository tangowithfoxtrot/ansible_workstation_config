# Automatically generated by espanso migration tool

global_vars:
  - name: reversed
    type: shell
    params:
      cmd: echo $ESPANSO_VARNAME | rev
matches:
### Template for pod.ymls
  - trigger: "kubepod"
    replace: |
             apiVersion: v1
             kind: Pod
             metadata:
               name: myapp-pod
               labels:
                 app: myapp
                 type: front-end
             spec:
               containers:
                 - name: nginx-container
                   image: nginx
                   volumeMounts:
                   - mountPath: /usr/share/nginx
                     name: data-volume
               volumes:
               - name: data-volume
                 persistentVolumeClaim:
                   claimName: data-volume
  - trigger: "kuberep"
    replace: |
             apiVersion: apps/v1
             kind: ReplicaSet
             metadata:
               name: myapp-replicaset
               labels:
                 app: myapp
                 type: front-end
             spec:
               template:
                 metadata:
                   name: myapp-pod
                   labels:
                     app: myapp
                     type: front-end
                 spec:
                   containers:
                     - name: nginx-container
                       image: nginx
               replicas: 3
               selector:
                 matchLabels:
                   type: front-end

  - trigger: "kubedep"
    replace: |
             apiVersion: apps/v1
             kind: Deployment
             metadata:
               name: nginx-deployment
               labels:
                 app: nginx
             spec:
               replicas: 3
               selector:
                 matchLabels:
                   app: nginx
               template:
                 metadata:
                   labels:
                     app: nginx
                 spec:
                   containers:
                   - name: nginx
                     image: nginx:1.14.2
                     ports:
                     - containerPort: 80
  - trigger: "kubev"
    replace: |
             apiVersion: v1
             kind: PersistentVolume
             metadata:
               name: pv-vol1
             spec:
               accessModes:
                 - ReadWriteOnce
               capacity:
                 storage: 500Mi
               hostPath:
                 path: /mnt
  - trigger: "kubepvc"
    replace: |
             apiVersion: v1
             kind: PersistentVolumeClaim
             metadata:
               name: data-volume
             spec:
               accessModes:
                 - ReadWriteOnce
               resources:
                 requests:
                   storage: 500Mi
  - trigger: kuberole
    replace: |
             apiVersion: rbac.authorization.k8s.io/v1
             kind: Role
             metadata:
               namespace: default
               name: pod-reader
             rules:
             - apiGroups: [""] # "" indicates the core API group
               resources: ["pods"]
               verbs: ["get", "watch", "list"]
  - trigger: kuberbac
    replace: |
             apiVersion: rbac.authorization.k8s.io/v1
              # This role binding allows "jane" to read pods in the "default" namespace.
              # You need to already have a Role named "pod-reader" in that namespace.
              kind: RoleBinding
              metadata:
                name: read-pods
                namespace: default
              subjects:
              # You can specify more than one "subject"
              - kind: User
                name: jane # "name" is case sensitive
                apiGroup: rbac.authorization.k8s.io
              roleRef:
                # "roleRef" specifies the binding to a Role / ClusterRole
                kind: Role #this must be Role or ClusterRole
                name: pod-reader # this must match the name of the Role or ClusterRole you wish to bind to
                apiGroup: rbac.authorization.k8s.io
